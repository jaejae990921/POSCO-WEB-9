<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <ul>

    </ul>

    <form id="chat">
        <input type="text" id="name" placeholder="nickname"/>
        <input type="text" id="message" placeholder="chat here" /><br />
        <button>send</button>
    </form>

    <script>
        const socket = new WebSocket('ws://localhost:8000');

        // form 가져오기
        const chatForm = document.querySelector('#chat');
        // ul 가져오기
        const ul = document.querySelector('ul');

        // 서버에 연결 요청
        socket.addEventListener('open', (event) => {
            socket.send(JSON.stringify({code: "1", msg :'서버에 연결되었습니다.'}));
        });

        // 메세지 수신
        socket.addEventListener('message', (event) => {
            const li = document.createElement('li'); // li 생성
            li.textContent = event.data; // li에 메세지 넣기
            ul.appendChild(li); // ul에 li 추가
        });

        // 오류 이벤트
        socket.addEventListener('error', (event) => {
            console.log(`에러가 발생했습니다. (에러:${event.error})`);
        });

        // 종료 이벤트
        socket.addEventListener('close', () => {
            console.log('서버와의 연결이 종료되었습니다.');
        });

        // ---------- form 이벤트 ---------- //
        chatForm.addEventListener('submit', (event) => {
            event.preventDefault(); // submit이 있으면 무조건 preventDefault()를 작성해줘야함
            const name = chatForm.querySelector('#name').value; // chatForm에서 선택
            const msg = chatForm.querySelector('#message'); // chatForm에서 선택
            socket.send(JSON.stringify({name, msg: msg.value})); // 서버로 메세지 전송
            msg.value = ''; // 메세지 전송 후 초기화
        })
    </script>
</body>

</html>