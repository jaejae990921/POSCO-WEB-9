<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <script src="/socket.io/socket.io.js"></script>
        <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
        <title>Document</title>
        <style>
            #body {
                width: 100%;
                height: 70vh;
                position: relative;
                background-color: skyblue;
            }

            #chat {
                position: absolute;
                bottom: 0;
                display: flex;
                justify-content: space-between;
                width: 100%;
            }

            #chat input {
                width: 80%;
            }

            .my-chat {
                display: flex;
                justify-content: flex-end;
                padding: 2px 0;
            }

            .my-chat p {
                margin: 0;
                padding: 10px;
                background-color: yellow;
                border-radius: 10px;
                margin-right: 10px;
            }

            .other-chat {
                display: flex;
                justify-content: flex-start;
                padding: 2px 0;
            }

            .other-chat p {
                margin: 0;
                padding: 10px;
                background-color: white;
                border-radius: 10px;
                margin-left: 10px;
            }

            .newUser {
                text-align: center;
            }
        </style>
    </head>
    <body>
        <div id="main">
            <form id="room">
                <input type="text" id="roomName" placeholder="채팅방 만들기" />
                <input
                    type="text"
                    id="userName"
                    placeholder="사용자 이름 입력"
                />
                <button>만들기</button>
            </form>
            <ul id="lists"></ul>
        </div>
        <div id="body" hidden>
            <div id="msg">

            </div>
            <form id="chat">
                <select id="userList"></select>
                <input type="text" id="message" placeholder="메세지 입력" />
                <button>입력</button>
            </form>
        </div>

        <script>
            const socket = io();
            const roomForm = document.querySelector("#room");
            const chatForm = document.querySelector("#chat");
            const msg = document.querySelector("#msg");

            let myName = "";

            //룸리스트
            socket.on("roomList", (roomLists) => {
                console.log(roomLists);
                const lists = document.querySelector("#lists");
                lists.textContent = "";
                roomLists.forEach((roomList) => {
                    const li = document.createElement("li");
                    li.textContent = `${roomList} 와 닉네임 입력 후 입장`;
                    lists.appendChild(li);
                });
            });

            //사용자 리스트
            socket.on("userList", (userLists) => {
                // 방에 접속한 유저 이름을 받고, select 태그에 추가
                console.log(userLists);
                const lists = document.querySelector("#userList");
                lists.textContent = "";
                let options = `<option value="all">전체</option>`;
                for (let i of userLists) {
                    options += `<option value="${i.key}">${i.name}</option>`;
                }
                lists.innerHTML = options;
            });

            //메세지 띄우기
            socket.on("newMessage", (message, nick) => {
                // console.log(message, nick); // 메세지, 닉네임 확인용
                const div = document.createElement("div");
                // div.classList.add("my-chat");
                div.classList.add(nick === myName ? "my-chat" : "other-chat")
                const p = document.createElement("p");
                p.textContent = `${nick} : ${message}`;
                div.appendChild(p); // div안에 p 넣고
                msg.appendChild(div); // msg div안에 div 넣기
            });

            //유저 입장
            socket.on("newUser", (nick) => {
                const div = document.createElement("div");
                div.classList.add("newUser");
                div.textContent = `${nick}님이 입장하셨습니다.`;
                msg.appendChild(div);
            })

            // 귓속말
            socket.on("whisper", (message, nick) => {
                const div = document.createElement("div");
                div.classList.add(nick === myName ? "my-chat" : "other-chat")
                const p = document.createElement("p");
                p.style.backgroundColor = "pink";
                p.textContent = ` (속닥속닥) ${nick} : ${message}`;
                div.appendChild(p); // div안에 p 넣고
                msg.appendChild(div); // msg div안에 div 넣기
            })

            ///폼 이벤트
            roomForm.addEventListener("submit", (e) => {
                e.preventDefault();
                const roomName = roomForm.querySelector("#roomName");
                const userName = roomForm.querySelector("#userName");
                if (roomName.value === "" || userName.value === "") {
                    alert("방이름과 닉네임 적어주세요");
                    return;
                }
                // 방입장할 때 방이름과 닉네임을 서버로 전송
                socket.emit("create", roomName.value, userName.value, () => {
                    myName = userName.value;
                    const main = document.querySelector("#main");
                    const body = document.querySelector("#body");
                    main.hidden = true;
                    body.hidden = false;
                });
            });
            chatForm.addEventListener("submit", (e) => {
                e.preventDefault();
                const user = document.querySelector("#userList");
                const message = document.querySelector("#message");
                console.log(user.value);
                const msg = {
                    nick: myName,
                    // select 태그의 선택된 값의 텍스트
                    to: user.options[user.selectedIndex].text,
                    message: message.value,
                };

                if (msg.to !== "전체") {
                    socket.emit("whisper", msg);
                } else {
                    socket.emit("sendMessage", msg);
                }
                message.value = "";
            });
        </script>
    </body>
</html>
